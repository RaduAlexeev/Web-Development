// Три столба на котором держится ООП:
// 1. Инкапсуляция
// 2. Наследование
// 3. Полиморфизм


// ИНКАПСУЛЯЦИЯ и СОКРЫТИЕ
// Инкапсуляция - суть заключается в тот что сам класс является своего рода капсулой которая содержит в себе свойства и методы для работы с этими свойствами.
// Рядом с инкапсуляцией идет сокрытие

// class - Человек

//         Свойства                 Методы

// public  Имя              public  Ходить
// public  Фамилия          public  Писать код
// public  Возраст          public  Рисовать
//                          public  Говорить
//                         private  Качать кровь
//                         private  Переваривать пищу
//                         private  Обрабатывать информацию

// public - когда человек будет использовать class он всегда сможет обратится к этм свойствам и методам.
// private - есть ещё с чем мы не можем работать, то на что мы не можем повлиять. Например: как сердце качает кровь и т.д. Это грубо говоря скрытая часть.

// Для того чтобы делать свойства и методы публичными или приватными существуют модификаторы доступа - public или private.

// Свойства и методы с модификатором private - можно использовать только внутри сообственого class. Вызвать их извне невозможно. 

// Знак нижнее подчеркиване в JS ( _ ) - это некоторое соглашение которое указывает что свойсвто приватное.
// Для того чтобы получать доступ к этим свойствам или изменять создаются get-ры и set-ры.

class Rectangle {
    _width;
    _height;

    constructor(w, h) {
        this._width = w;
        this._height = h;
    }

    get width() {
        return this._width
    }

    set width(value) {
        if (value <= 0) {
            this._width = 1;
        } else {
            this._width = value;
        }
    }
}

// Высота height является приватной и для неё мы не сделали get-ров и set-ров и поэтому напрямую мы можем работать внутри class 


const rect = new Rectangle(5, 10)
rect.width = 4;
console.log(rect)